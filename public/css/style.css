body {
    font-family: 'Roboto', sans-serif;
    background-color: #f4f6f9;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;      
    margin: 0;
    flex-direction: column;
}

#header {
    display: flex;
    z-index: 3;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    text-align: center;
    margin-bottom: 20px;
   
}

    #header img {
        display: flex;
        margin: 0 auto;
        max-width: 100%;
        transform: translateX(+8px);
       
    }

#header h2,
#header h4,
#header h5 {
    display: flex;
    
    margin: 0;
    /* Remove default margin */
    padding: 0;
    /* Remove default padding (if any) */
    justify-content: center;
    /* Outline effect using text-shadow */
    color: rgb(255, 255, 255); /* Change to your desired text color */
    text-shadow: 
        -1px -1px 0 black,  
        1px -1px 0 black,
        -1px 1px 0 black,
        1px 1px 0 black; /* Adjust the color and pixel values as needed */

}

#footer {
    display: flex;
    flex-direction: column;
    align-items: center;
    font-weight: normal;
    margin-top: 35px;
}



.notification {
    position: fixed;
    top: 20px;
    /* You can adjust this value to position vertically */
    flex-direction: column;
    transform: translate(-50%, 0);
    /* Adjust for half its width to center it */
    background-color: #007bff;
    /* Change to your preferred color */
    color: white;
    padding: 15px;
    border-radius: 5px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
    z-index: 1000;
    /* Ensure it's on top */
    transition: opacity 0.5s ease, transform 0.5s ease;
    display: none;
}

.notification.show {
    display: flex;
    transform: translateY(0);
}

.notification.hidden {
    display: none;
}

.toggle-button {
    border: none;
    /* Remove border */
    color: #007BFF;
    /* Subtle blue color for text */
    cursor: pointer;
    /* Change cursor to pointer */
    font-size: 14px;
    /* Slightly smaller font size */
    text-decoration: underline;
    /* Underline text to indicate it's a button */
}

#contentBackground {
    position: absolute;
    background-color: white; /* The white rectangle */
    width: 280px; /* Adjust this value to control the width of the white rectangle */
    height: 340px; /* Adjust this value to control the height */
    top: -40%;
    left: 50%;
    transform: translate(-50%); /* Center the div horizontally and vertically */
    z-index: -1; /* Set a lower z-index so it appears beneath other elements */
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2); /* Optional: Add a shadow for better visibility */
    border-radius: 10px; /* Optional: Rounded corners */
    padding: 20px; /* Add padding to create space inside the rectangle */
    transition: width 0.25s ease, height 0.25s ease;
}

#spreadsheetContainer {

    display: flex;
    flex-direction: column;
    width: 250px;
    gap: 1rem;
    justify-content: center;
    align-items: center;

    
}

#otherSettings {
    display: none;
}

#otherSettings button {
    justify-content: center;
    display: flex;
}

.toggleBtn {
    display:block;
    border: none;
    background-color: #007BFF;
    /* Change this to your preferred color */
    cursor: pointer;
    font-size: 1rem;
    width: 100%;
    /* Full width */
    padding: 10px;
    /* Add padding for better click area */
}

.toggleBtn:hover {
    background-color: #0056b3;
    /* Darker color on hover */
}

#login {
    display: flex;
    /* Use flexbox for centering */
    justify-content: center;
    /* Center items horizontally */
    width: 100%;
    /* Ensure it takes the full width */
}

.loginBtn {
    border: none;
    background-color: #007BFF;
    /* Change this to your preferred color */
    cursor: pointer;
    font-size: 1rem;
    padding: 10px;
    /* Add padding for better click area */
    margin: 10px 0;
    /* Add vertical margin for spacing */
}

#refreshWrapper {
    display: flex;
    align-items: center; /* Center items vertically */
    padding-bottom: 0;
}

#refreshWrapper select,
#refreshWrapper button {
    height: 40px; /* Set a uniform height */
    padding: 10px; /* Optional: Add some horizontal padding */
    line-height: 1; /* Ensure consistent line height */
    font-size: 16px; /* Set a uniform font size */
    border: 1px solid #ccc; /* Optional: Add border for consistency */
    border-radius: 5px; /* Optional: Rounded corners for consistency */
    box-sizing: border-box; /* Ensure padding and border are included in total width/height */
    margin-top: 0px;
    margin-bottom: -5px;
}

#refreshWrapper button {
    margin-left: 2px; /* Space between select and button */
    transform: translateY(2px); /* Move the button up slightly */
}

#refreshButton {
    width: 40px;
    height: 40px;
    padding: 0;
    border: none;
    background-color: #007bff; /* Blue background */
    color: white; /* White text/icon */
    border-radius: 10%; /* Slight rounding for a soft square look (optional) */
    display: flex;
    justify-content: center;
    align-items: center; /* Center the icon inside the button */
  }
  
  .icon {
    font-size: 24px; /* Adjust size of the icon */
    transition: transform 0.3s ease; /* Smooth rotation */
  }
  
  #refreshButton:hover .icon {
    transform: rotate(90deg); /* Rotate the icon on hover */
  }

#spreadsheetForm,
#availableSpreadsheets {
    display: flex;
    flex-direction: column;
    /* Stack items vertically */
    width: 100%;
    /* Set to full width of its parent */
    padding: 10px;
    padding-bottom: 9px;
    /* Add some padding */
    border: 1px solid #ccc;
    /* Optional: add a border for visual separation */
    border-radius: 5px;
    /* Optional: rounded corners */
}

#spreadsheetForm button {
    margin: 0px;
}

#loginBtn {
    width: 100%;
    margin-bottom: 10px; /* Space below the login button */
}

#addSpreadsheetBtn {
    margin-top: 10px; /* Space above the load spreadsheets button */
}

#availableSpreadsheets button {
   margin-bottom: 5x;
}

#availableSpreadsheets h4 {
    display: flex;
    align-self: center;
}

#spreadsheetSelect {
    width: 195px;
    margin-top: 10px;
}

#availableSpreadsheets h6 {
    margin: 0px;  /* Optional: Add spacing between the two elements */
    padding: 0px;
}

#spreadsheetForm {
    display: none;
    /* Initially hide the spreadsheet management form */
}

#spreadsheetContainer button {
    margin: 10px;
    /* Adjust margins between buttons */
}

/* Keep the active class for the toggle */
#spreadsheetForm.active {
    display: flex;
    /* Show the form when active */
    transition: display 0.3s ease-in-out;
    /* Smooth transition */
}

#formContainer button {

    margin: 10px;

}

#formContainer h6 {

    margin-top: 0.5rem;
    margin-bottom: 0.5rem;
    width: 300px;

}


h1 {
    text-align: center;
    color: #333;
    margin-bottom: 1.5rem;
}

form {
    display: flex;
    flex-direction: column;
}

label {
    margin-bottom: 0.5rem;
    font-weight: 500;
    color: #444;
}

select,
input[type="text"] {
    padding: 10px;
    margin-bottom: 1.5rem;
    border: 1px solid #ddd;
    border-radius: 5px;
    font-size: 1rem;
    background-color: #f8f8f8;
}

#rowIndex {
    padding: 10px;
    margin-bottom: 0.5rem;
    border: 1px solid #ddd;
    border-radius: 5px;
    font-size: 1rem;
    background-color: #f8f8f8;
}

select:focus,
input[type="text"]:focus {
    outline: none;
    border-color: #007bff;
}

button {
    padding: 10px;
    border: none;
    border-radius: 5px;
    background-color: #007bff;
    color: white;
    font-size: 1rem;
    font-weight: bold;
    cursor: pointer;
    transition: background-color 0.3s;
    justify-content: center;
}

button:hover {
    background-color: #0056b3;
}

/* Modal Styling */
#modal {
    display: none;
    position: fixed;
    z-index: 1;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    display: flex;
    justify-content: center;
    align-items: center;
}

#modalContent {
    background-color: white;
    padding: 20px;
    border-radius: 10px;
    width: 90%;
    max-width: 600px;
    text-align: center;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2);
    display: flex;
    /* Use flexbox to layout contents */
    flex-direction: column;
    /* Stack children vertically */
    justify-content: space-between;
    /* Space between elements */
    height: 400px;
    /* Set a fixed height */
}

#modalContent button {
    margin-top: auto;
    /* Push the button to the bottom */
    padding: 10px 20px;
    border: none;
    border-radius: 5px;
    background-color: #007bff;
    color: white;
    font-size: 1rem;
    cursor: pointer;
    transition: background-color 0.3s;
}

#modalContent button:hover {
    background-color: #0056b3;
}

#modalContent pre {
    text-align: left;
    background-color: #f4f4f4;
    padding: 10px;
    border-radius: 5px;
    white-space: pre-wrap;
    max-height: 300px;
    overflow-y: auto;
}

.close {
    float: right;
    font-size: 1.5rem;
    color: #666;
    cursor: pointer;
}

.close:hover {
    color: black;
}

.hidden {
    display: none;
  }

#otherSettings {

    display: flex;
    flex-direction: column;
    /* Stack items vertically */
    width: 100%;
    /* Set to full width of its parent */
    padding: 10px;
    /* Add some padding */
    border: 1px solid #ccc;
    /* Optional: add a border for visual separation */
    border-radius: 5px;

}

#featuresContent {
    display: none;               /* Use flexbox for layout */
    flex-direction: column;      /* Stack children vertically */
    width: 500px;
    text-align: center;          /* Center text within the div */
}

#featuresContent button {
    margin-top: 30px;
}

#featuresContent p {
    text-align: left;
    margin-left: 30px;
    padding-top: 0px;
    padding-bottom: 0px;
    margin-top: 0px;
    margin-bottom: 0px;
}

#featuresContent h4 {
    text-align: left;
    padding-top: 20px;
    padding-bottom: 3px;
    margin-top: 0px;
    margin-bottom: 0px;
}

#featuresContent button {
    align-self: center;
    justify-content: center;
    width: 300px;
}

#changelogContent {
    display: flex;               /* Use flexbox for layout */
    flex-direction: column;      /* Stack children vertically */
    align-items: center;         /* Center items horizontally */
    justify-content: center;     /* Center items vertically */
    /*height: 100vh;              /* Make it full height of the viewport */
    width: 500px;
    text-align: center;          /* Center text within the div */
}

#changelogContent button {
    justify-content: center;
    width: 50%;
}

#changelogContent h1 {
    display: block;
    padding-top: 20px;
}

#changelogList {
    display: block;
    flex-direction: column;
    align-items: left;
    width: 100%
}

/* Style for other content */
.content {
    position: relative; /* Relative position for other content */
    z-index: 1; /* Ensure content is above the background */
}

#background {
    position:fixed; /* Fixed position to cover the entire viewport */
    width: 100vw; /* Full viewport width */
    height: 100vh; /* Full viewport height */
    padding: 0; /* Ensure no padding */
    margin: 0; /* Ensure no margin */
    background-image: url('data:image/png;base64,...'); /* Replace with your Base64 image */
    /*background-size: contain; /* Maintain original size, can also be 'contain' */
    background-repeat: repeat; /* Tile the background image */
    z-index: -2; /* Ensure it’s behind other elements */
}

#backgroundCanvas {
    position: absolute; /* Positioning the canvas absolutely */
    top: 0; /* Align to the top of the screen */
    left: 0; /* Align to the left of the screen */
    width: 100vw; /* Fill the width of the parent */
    height: 100vh; /* Fill the height of the parent */
    pointer-events: none; /* Allow clicks to pass through to underlying elements */
    background-color: transparent; /* Ensure canvas background is transparent */
    z-index: -1; /* Ensure it's above the background but below any content */
}

@keyframes fadeIn {
    from {
        opacity: 0;
    }

    to {
        opacity: 1;
    }
}

.fade-in {
    animation: fadeIn 0.5s forwards; /* 0.5 seconds for the fade-in effect */
}


